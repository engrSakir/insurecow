# -*- coding: utf-8 -*-
"""Copy of Copy of Project Cow_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1utYZRxHzOpKsx0iRMOAfBkztbAODd4L9
"""

pip install DeepImageSearch --upgrade

from google.colab import drive
drive.mount('/content/drive')

!unzip '/content/drive/MyDrive/Yolo v5/Train.zip' -d "/content/"

from DeepImageSearch import Load_Data, Search_Setup

# Commented out IPython magic to ensure Python compatibility.
import tensorflow as tf
from google.colab import files
from IPython.display import Image
import imageio

import numpy as np
import base64
import io
import os
import re

# %matplotlib inline

# Commented out IPython magic to ensure Python compatibility.
from google.colab import files
from IPython.display import Image
import imageio
import matplotlib.pyplot as plt

# %matplotlib inline

def convertBase64(FileName):
  with open(FileName,'rb') as f:
    data = f.read()

  res = base64.b64encode(data)
  base64data = res.decode('UTF-8')
  imgdata = base64.b64decode(base64data)
  image = Image.open(io.BytesIO(imgdata))

  return np.array(image)

# Load images from a folder
image_list = Load_Data().from_folder(['/content/Train'])

# Set up the search engine, You can load 'vit_base_patch16_224_in21k', 'resnet50' etc more then 500+ models
st = Search_Setup(image_list=image_list, model_name='vgg19', pretrained=True, image_count=100)
st.run_index()
metadata = st.get_image_metadata_file()

# Update metadata
metadata = st.get_image_metadata_file()

#this image path go for Similarity check
#main_object
main_object = st.get_similar_images(image_path = '/content/Train/03059990-IMG_20221104_145701.jpg', number_of_images=1)



"""Perceptual Similarity

"""

!git clone https://github.com/richzhang/PerceptualSimilarity

# Commented out IPython magic to ensure Python compatibility.
# %cd PerceptualSimilarity/
# !pip install -r requirements.txt

"""Checking Perceptual Similarity"""

#user_image
#main_object

x=!python lpips_2imgs.py -p0 /content/Train/00c97389-IMG_20221104_134507.jpg -p1 /content/Train/00c97389-IMG_20221104_134507.jpg --use_gpu

#x provide a Similarity number



"""Final result"""

t= str(x[-1])
p= float(re.search(r'\d.\d+', t).group())

if p <= 1:
  res = 1-p
  if res >0.7:
    print("yes")
  else:
    print("no")
  print('similarity : {}'.format((1-p)*100))
else:
  print("no")

